--- /sdcard/Download/llvm_android/configs.py	2020-11-14 20:16:20.698687752 +0800
+++ llvm_android/configs.py	2020-11-18 23:25:03.492548830 +0800
@@ -162,10 +162,12 @@
     """Configuration for Linux targets."""
 
     target_os: hosts.Host = hosts.Host.Linux
-    sysroot: Optional[Path] = (paths.GCC_ROOT / 'host' / 'x86_64-linux-glibc2.17-4.8' / 'sysroot')
-    gcc_root: Path = (paths.GCC_ROOT / 'host' / 'x86_64-linux-glibc2.17-4.8')
-    gcc_triple: str = 'x86_64-linux'
-    gcc_ver: str = '4.8.3'
+    #sysroot: Optional[Path] = (paths.GCC_ROOT / 'host' / 'x86_64-linux-glibc2.17-4.8' / 'sysroot')
+    sysroot: Optional[Path] = (paths.GCC_ROOT / 'sysroot')
+    #gcc_root: Path = (paths.GCC_ROOT / 'host' / 'x86_64-linux-glibc2.17-4.8')
+    gcc_root: Path = (paths.GCC_ROOT)
+    gcc_triple: str = 'aarch64-linux-android'
+    gcc_ver: str = '4.9.x'
 
     @property
     def ldflags(self) -> List[str]:
@@ -362,6 +364,14 @@
         cflags = super().cflags
         cflags.append('-march=armv7-a')
         return cflags
+        
+    @property
+    def ldflags(self) -> List[str]:
+        ldflags = super().ldflags
+        arm_libgcc_path: Path = (paths.NDK_BASE / 'toolchains' / 'arm-linux-androideabi-4.9' /
+                            'prebuilt' / 'linux-x86_64' / 'lib'/ 'gcc' /'arm-linux-androideabi' / '4.9.x')
+        ldflags.append('-L{}'.format(arm_libgcc_path))
+        return ldflags
 
 
 class AndroidAArch64Config(AndroidConfig):
@@ -370,6 +380,14 @@
     _toolchain_path: Path = Path('aarch64/aarch64-linux-android-4.9/aarch64-linux-android')
     _toolchain_lib: Path = (paths.NDK_BASE / 'toolchains' / 'aarch64-linux-android-4.9' /
                             'prebuilt' / 'linux-x86_64' / 'aarch64-linux-android' / 'lib64')
+                            
+    @property
+    def ldflags(self) -> List[str]:
+        ldflags = super().ldflags
+        aarch64_libgcc_path: Path = (paths.NDK_BASE / 'toolchains' / 'aarch64-linux-android-4.9' /
+                            'prebuilt' / 'linux-x86_64' / 'lib'/ 'gcc' /'aarch64-linux-android' / '4.9.x')
+        ldflags.append('-L{}'.format(aarch64_libgcc_path))
+        return ldflags
 
 
 class AndroidX64Config(AndroidConfig):
@@ -378,7 +396,14 @@
     _toolchain_path: Path = Path('x86/x86_64-linux-android-4.9/x86_64-linux-android')
     _toolchain_lib: Path = (paths.NDK_BASE / 'toolchains' / 'x86_64-4.9' / 'prebuilt' /
                             'linux-x86_64' / 'x86_64-linux-android' / 'lib64')
-
+    
+    @property
+    def ldflags(self) -> List[str]:
+        ldflags = super().ldflags
+        x86_64_libgcc_path: Path = (paths.NDK_BASE / 'toolchains' / 'x86_64-4.9' /
+                            'prebuilt' / 'linux-x86_64' / 'lib'/ 'gcc' /'x86_64-linux-android' / '4.9.x')
+        ldflags.append('-L{}'.format(x86_64_libgcc_path))
+        return ldflags
 
 class AndroidI386Config(AndroidConfig):
     """Configs for android x86 targets."""
@@ -394,6 +419,14 @@
         return cflags
 
     @property
+    def ldflags(self) -> List[str]:
+        ldflags = super().ldflags
+        x86_libgcc_path: Path = (paths.NDK_BASE / 'toolchains' / 'x86-4.9' /
+                            'prebuilt' / 'linux-x86_64' / 'lib'/ 'gcc' /'i686-linux-android' / '4.9.x')
+        ldflags.append('-L{}'.format(x86_libgcc_path))
+        return ldflags
+        
+    @property
     def _toolchain_builtins(self) -> Path:
         # The 32-bit libgcc.a is sometimes in a separate subdir
         return super()._toolchain_builtins / '32'
